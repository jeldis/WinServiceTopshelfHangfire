<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hangfire.LiteDB</name>
    </assembly>
    <members>
        <member name="T:Hangfire.LiteDB.CountersAggregator">
            <summary>
            Represents Counter collection aggregator for LiteDB database
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.CountersAggregator.#ctor(Hangfire.LiteDB.LiteDbStorage,System.TimeSpan)">
            <summary>
            Constructs Counter collection aggregator
            </summary>
            <param name="storage">LiteDB storage</param>
            <param name="interval">Checking interval</param>
        </member>
        <member name="M:Hangfire.LiteDB.CountersAggregator.Execute(Hangfire.Server.BackgroundProcessContext)">
            <summary>
            Runs aggregator
            </summary>
            <param name="context">Background processing context</param>
        </member>
        <member name="M:Hangfire.LiteDB.CountersAggregator.Execute(System.Threading.CancellationToken)">
            <summary>
            Runs aggregator
            </summary>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="M:Hangfire.LiteDB.CountersAggregator.ToString">
            <summary>
            Returns text representation of the object
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.EnqueuedAndFetchedCountDto">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.EnqueuedAndFetchedCountDto.EnqueuedCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.EnqueuedAndFetchedCountDto.FetchedCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.Entities.AggregatedCounter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.Entities.Counter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.Entities.DistributedLock">
            <summary>
            Document used for holding a distributed lock in LiteDB.
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.DistributedLock.Id">
            <summary>
            The unique id of the document.
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.DistributedLock.Resource">
            <summary>
            The name of the resource being held.
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.DistributedLock.ExpireAt">
            <summary>
            The timestamp for when the lock expires.
            This is used if the lock is not maintained or 
            cleaned up by the owner (e.g. process was shut down).
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.Entities.JobDetailedDto">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.JobDetailedDto.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.JobDetailedDto.InvocationData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.JobDetailedDto.Arguments">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.JobDetailedDto.CreatedAt">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.JobDetailedDto.ExpireAt">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.JobDetailedDto.FetchedAt">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.JobDetailedDto.StateId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.JobDetailedDto.StateName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.JobDetailedDto.StateReason">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.JobDetailedDto.StateData">
            <summary>
            
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.Entities.JobQueue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.JobQueue.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.JobQueue.JobId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.JobQueue.Queue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.JobQueue.FetchedAt">
            <summary>
            
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.Entities.LiteHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteHash.Field">
            <summary>
            
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.Entities.LiteJob">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteJob.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteJob.IdString">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteJob.StateName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteJob.InvocationData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteJob.Arguments">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteJob.Parameters">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteJob.StateHistory">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteJob.CreatedAt">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteJob.ExpireAt">
            <summary>
            
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.Entities.LiteKeyValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteKeyValue.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteKeyValue.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteKeyValue.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.Entities.LiteExpiringKeyValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteExpiringKeyValue.ExpireAt">
            <summary>
            
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.Entities.LiteList">
            <summary>
            
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.Entities.LiteSchema">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteSchema.Version">
            <summary>
            
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.Entities.LiteSet">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteSet.Score">
            <summary>
            
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.Entities.LiteState">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteState.JobId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteState.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteState.Reason">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteState.CreatedAt">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.LiteState.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.Entities.Server">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.Server.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.Server.LastHeartbeat">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.Server.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.Entities.ServerData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.ServerData.WorkerCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.ServerData.Queues">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.Entities.ServerData.StartedAt">
            <summary>
            
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.ExpirationManager">
            <summary>
            Represents Hangfire expiration manager for LiteDB database
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.ExpirationManager.#ctor(Hangfire.LiteDB.LiteDbStorage)">
            <summary>
            Constructs expiration manager with one hour checking interval
            </summary>
            <param name="storage">LiteDb storage</param>
        </member>
        <member name="M:Hangfire.LiteDB.ExpirationManager.#ctor(Hangfire.LiteDB.LiteDbStorage,System.TimeSpan)">
            <summary>
            Constructs expiration manager with specified checking interval
            </summary>
            <param name="storage">LiteDB storage</param>
            <param name="checkInterval">Checking interval</param>
        </member>
        <member name="M:Hangfire.LiteDB.ExpirationManager.Execute(Hangfire.Server.BackgroundProcessContext)">
            <summary>
            Run expiration manager to remove outdated records
            </summary>
            <param name="context">Background processing context</param>
        </member>
        <member name="M:Hangfire.LiteDB.ExpirationManager.Execute(System.Threading.CancellationToken)">
            <summary>
            Run expiration manager to remove outdated records
            </summary>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="M:Hangfire.LiteDB.ExpirationManager.ToString">
            <summary>
            Returns text representation of the object
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.HangfireDbContext">
            <summary>
            Represents LiteDB database context for Hangfire
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.HangfireDbContext.Database">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.HangfireDbContext.Repository">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.HangfireDbContext.#ctor(System.String,System.String)">
            <summary>
            Starts LiteDB database using a connection string for file system database
            </summary>
            <param name="connectionString">Connection string for LiteDB database</param>
            <param name="prefix">Collections prefix</param>
        </member>
        <member name="M:Hangfire.LiteDB.HangfireDbContext.Instance(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="P:Hangfire.LiteDB.HangfireDbContext.ConnectionId">
            <summary>
            LiteDB database connection identifier
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.HangfireDbContext.StateDataKeyValue">
            <summary>
            Reference to collection which contains various state information
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.HangfireDbContext.StateDataExpiringKeyValue">
            <summary>
            Reference to collection which contains various state information
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.HangfireDbContext.StateDataHash">
            <summary>
            Reference to collection which contains various state information
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.HangfireDbContext.StateDataList">
            <summary>
            Reference to collection which contains various state information
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.HangfireDbContext.StateDataSet">
            <summary>
            Reference to collection which contains various state information
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.HangfireDbContext.StateDataCounter">
            <summary>
            Reference to collection which contains various state information
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.HangfireDbContext.StateDataAggregatedCounter">
            <summary>
            Reference to collection which contains various state information
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.HangfireDbContext.DistributedLock">
            <summary>
            Reference to collection which contains distributed locks
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.HangfireDbContext.Job">
            <summary>
            Reference to collection which contains jobs
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.HangfireDbContext.JobQueue">
            <summary>
            Reference to collection which contains jobs queues
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.HangfireDbContext.Schema">
            <summary>
            Reference to collection which contains schemas
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.HangfireDbContext.Server">
            <summary>
            Reference to collection which contains servers information
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.HangfireDbContext.Init(Hangfire.LiteDB.LiteDbStorageOptions)">
            <summary>
            Initializes intial collections schema for Hangfire
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.IPersistentJobQueue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.IPersistentJobQueue.Dequeue(System.String[],System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="queues"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.IPersistentJobQueue.Enqueue(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="queue"></param>
            <param name="jobId"></param>
        </member>
        <member name="T:Hangfire.LiteDB.IPersistentJobQueueMonitoringApi">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.IPersistentJobQueueMonitoringApi.GetQueues">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="queue"></param>
            <param name="from"></param>
            <param name="perPage"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="queue"></param>
            <param name="from"></param>
            <param name="perPage"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(System.String)">
            <summary>
            
            </summary>
            <param name="queue"></param>
            <returns></returns>
        </member>
        <member name="T:Hangfire.LiteDB.IPersistentJobQueueProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.IPersistentJobQueueProvider.GetJobQueue(Hangfire.LiteDB.HangfireDbContext)">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(Hangfire.LiteDB.HangfireDbContext)">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="T:Hangfire.LiteDB.LiteDbBootstrapperConfigurationExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbBootstrapperConfigurationExtensions.LiteDbStorage(Hangfire.IGlobalConfiguration,System.String)">
            <summary>
            Configure Hangfire to use LiteDB storage
            </summary>
            <param name="configuration">Configuration</param>
            <param name="connectionString">Connection string for LiteDB database, for example 'LiteDB://username:password@host:port'</param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbBootstrapperConfigurationExtensions.LiteDbStorage(Hangfire.IGlobalConfiguration,System.String,Hangfire.LiteDB.LiteDbStorageOptions)">
            <summary>
            Configure Hangfire to use LiteDB storage
            </summary>
            <param name="configuration">Configuration</param>
            <param name="connectionString">Connection string for LiteDB database, for example 'LiteDB://username:password@host:port'</param>
            <param name="storageOptions">Storage options</param>
            <returns></returns>
        </member>
        <member name="T:Hangfire.LiteDB.LiteDbConnection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbConnection.#ctor(Hangfire.LiteDB.HangfireDbContext,Hangfire.LiteDB.PersistentJobQueueProviderCollection)">
            <summary>
            Ctor using default storage options
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.LiteDbDistributedLock">
            <summary>
            Represents distibuted lock implementation for LiteDB
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbDistributedLock.#ctor(System.String,System.TimeSpan,Hangfire.LiteDB.HangfireDbContext,Hangfire.LiteDB.LiteDbStorageOptions)">
            <summary>
            Creates LiteDB distributed lock
            </summary>
            <param name="resource">Lock resource</param>
            <param name="timeout">Lock timeout</param>
            <param name="database">Lock database</param>
            <param name="storageOptions">Database options</param>
            <exception cref="T:Hangfire.Storage.DistributedLockTimeoutException">Thrown if lock is not acuired within the timeout</exception>
            <exception cref="T:Hangfire.LiteDB.LiteDbDistributedLockException">Thrown if other LiteDB specific issue prevented the lock to be acquired</exception>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbDistributedLock.Dispose">
            <summary>
            Disposes the object
            </summary>
            <exception cref="T:Hangfire.LiteDB.LiteDbDistributedLockException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbDistributedLock.Release">
            <summary>
            Release the lock
            </summary>
            <exception cref="T:Hangfire.LiteDB.LiteDbDistributedLockException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbDistributedLock.StartHeartBeat">
            <summary>
            Starts database heartbeat
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.LiteDbDistributedLockException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbDistributedLockException.#ctor(System.String,System.Exception)">
            <summary>
            Creates exception with inner exception
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Hangfire.LiteDB.LiteDbExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbExtensions.DeleteOne``1(LiteDB.LiteCollection{``0})">
            <summary>
            
            </summary>
            <param name="coll"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbExtensions.FindOneAndUpdate``1(LiteDB.LiteCollection{``0})">
            <summary>
            
            </summary>
            <param name="coll"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbExtensions.OfType``1(LiteDB.LiteCollection{``0})">
            <summary>
            
            </summary>
            <param name="source"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbExtensions.ToBsonValueEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            
            </summary>
            <param name="items"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Hangfire.LiteDB.LiteDbFetchedJob">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbFetchedJob.#ctor(Hangfire.LiteDB.HangfireDbContext,LiteDB.ObjectId,System.Nullable{System.Int32},System.String)">
            <summary>
            Constructs fetched job by database connection, identifier, job ID and queue
            </summary>
            <param name="connection">Database connection</param>
            <param name="id">Identifier</param>
            <param name="jobId">Job ID</param>
            <param name="queue">Queue name</param>
        </member>
        <member name="P:Hangfire.LiteDB.LiteDbFetchedJob.JobId">
            <summary>
            Job ID
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.LiteDbFetchedJob.Queue">
            <summary>
            Queue name
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbFetchedJob.RemoveFromQueue">
            <summary>
            Removes fetched job from a queue
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbFetchedJob.Requeue">
            <summary>
            Puts fetched job into a queue
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbFetchedJob.Dispose">
            <summary>
            Disposes the object
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.LiteDbJobQueue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbJobQueue.#ctor(Hangfire.LiteDB.HangfireDbContext,Hangfire.LiteDB.LiteDbStorageOptions)">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <param name="storageOptions"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbJobQueue.Dequeue(System.String[],System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="queues"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbJobQueue.Enqueue(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="queue"></param>
            <param name="jobId"></param>
        </member>
        <member name="T:Hangfire.LiteDB.LiteDbJobQueueMonitoringApi">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbJobQueueMonitoringApi.#ctor(Hangfire.LiteDB.HangfireDbContext)">
            <summary>
            
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbJobQueueMonitoringApi.GetQueues">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbJobQueueMonitoringApi.GetEnqueuedJobIds(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="queue"></param>
            <param name="from"></param>
            <param name="perPage"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbJobQueueMonitoringApi.GetFetchedJobIds(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="queue"></param>
            <param name="from"></param>
            <param name="perPage"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(System.String)">
            <summary>
            
            </summary>
            <param name="queue"></param>
            <returns></returns>
        </member>
        <member name="T:Hangfire.LiteDB.LiteDbJobQueueProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbJobQueueProvider.#ctor(Hangfire.LiteDB.LiteDbStorageOptions)">
            <summary>
            
            </summary>
            <param name="storageOptions"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbJobQueueProvider.GetJobQueue(Hangfire.LiteDB.HangfireDbContext)">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbJobQueueProvider.GetJobQueueMonitoringApi(Hangfire.LiteDB.HangfireDbContext)">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="T:Hangfire.LiteDB.LiteDbMonitoringApi">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.#ctor(Hangfire.LiteDB.HangfireDbContext,Hangfire.LiteDB.PersistentJobQueueProviderCollection)">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="queueProviders"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.Queues">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.Servers">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.JobDetails(System.String)">
            <summary>
            
            </summary>
            <param name="jobId"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.GetStatistics">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.EnqueuedJobs(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="queue"></param>
            <param name="from"></param>
            <param name="perPage"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.FetchedJobs(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="queue"></param>
            <param name="from"></param>
            <param name="perPage"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.ProcessingJobs(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.ScheduledJobs(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.SucceededJobs(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.FailedJobs(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.DeletedJobs(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.ScheduledCount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.EnqueuedCount(System.String)">
            <summary>
            
            </summary>
            <param name="queue"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.FetchedCount(System.String)">
            <summary>
            
            </summary>
            <param name="queue"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.FailedCount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.ProcessingCount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.SucceededListCount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.DeletedListCount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.SucceededByDatesCount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.FailedByDatesCount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.HourlySucceededJobs">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbMonitoringApi.HourlyFailedJobs">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Hangfire.LiteDB.LiteDbStorage">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbStorage.#ctor(System.String)">
            <summary>
            Constructs Job Storage by database connection string
            </summary>
            <param name="connectionString">LiteDB connection string</param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbStorage.#ctor(System.String,Hangfire.LiteDB.LiteDbStorageOptions)">
            <summary>
            Constructs Job Storage by database connection string and options
            </summary>
            <param name="connectionString">LiteDB connection string</param>
            <param name="storageOptions">Storage options</param>
        </member>
        <member name="P:Hangfire.LiteDB.LiteDbStorage.Connection">
            <summary>
            Database context
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.LiteDbStorage.QueueProviders">
            <summary>
            Queue providers collection
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbStorage.GetMonitoringApi">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbStorage.GetConnection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbStorage.WriteOptionsToLog(Hangfire.Logging.ILog)">
            <summary>
            
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbStorage.CreateAndOpenConnection">
            <summary>
            Opens connection to database
            </summary>
            <returns>Database context</returns>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbStorage.ToString">
            <summary>
            Returns text representation of the object
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbStorage.GetStateHandlers">
            <summary>
            Returns collection of state handers
            </summary>
            <returns>Collection of state handers</returns>
        </member>
        <member name="T:Hangfire.LiteDB.LiteDbStorageExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbStorageExtensions.UseLiteDbStorage(Hangfire.IGlobalConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbStorageExtensions.UseLiteDbStorage(Hangfire.IGlobalConfiguration,System.String,Hangfire.LiteDB.LiteDbStorageOptions)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
            <param name="nameOrConnectionString"></param>
            <param name="options"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Hangfire.LiteDB.LiteDbStorageOptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbStorageOptions.#ctor">
            <summary>
            Constructs storage options with default parameters
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.LiteDbStorageOptions.Prefix">
            <summary>
            Collection name prefix for all Hangfire related collections
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.LiteDbStorageOptions.QueuePollInterval">
            <summary>
            Poll interval for queue
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.LiteDbStorageOptions.InvisibilityTimeout">
            <summary>
            Invisibility timeout
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.LiteDbStorageOptions.DistributedLockLifetime">
            <summary>
            Lifetime of distributed lock
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.LiteDbStorageOptions.ClientId">
            <summary>
            Cleint identifier
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.LiteDbStorageOptions.JobExpirationCheckInterval">
            <summary>
            Expiration check inteval for jobs
            </summary>
        </member>
        <member name="P:Hangfire.LiteDB.LiteDbStorageOptions.CountersAggregateInterval">
            <summary>
            Counters interval
            </summary>
        </member>
        <member name="T:Hangfire.LiteDB.LiteDbWriteOnlyTransaction">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.#ctor(Hangfire.LiteDB.HangfireDbContext,Hangfire.LiteDB.PersistentJobQueueProviderCollection)">
            <summary>
            </summary>
            <param name="connection"></param>
            <param name="queueProviders"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.ExpireJob(System.String,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="jobId"></param>
            <param name="expireIn"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.PersistJob(System.String)">
            <summary>
            
            </summary>
            <param name="jobId"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.SetJobState(System.String,Hangfire.States.IState)">
            <summary>
            
            </summary>
            <param name="jobId"></param>
            <param name="state"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.AddJobState(System.String,Hangfire.States.IState)">
            <summary>
            
            </summary>
            <param name="jobId"></param>
            <param name="state"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.AddToQueue(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="queue"></param>
            <param name="jobId"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.IncrementCounter(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.IncrementCounter(System.String,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="expireIn"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.DecrementCounter(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.DecrementCounter(System.String,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="expireIn"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.AddToSet(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.AddToSet(System.String,System.String,System.Double)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="score"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.RemoveFromSet(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.InsertToList(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.RemoveFromList(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.TrimList(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="keepStartingFrom"></param>
            <param name="keepEndingAt"></param>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.SetRangeInHash(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="keyValuePairs"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.RemoveHash(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.Commit">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.ExpireSet(System.String,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="expireIn"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.ExpireList(System.String,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="expireIn"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.ExpireHash(System.String,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="expireIn"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.PersistSet(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.PersistList(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.PersistHash(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.AddRangeToSet(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="items"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.LiteDbWriteOnlyTransaction.RemoveSet(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Hangfire.LiteDB.ObjectExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.ObjectExtensions.ThrowIfNull(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="name"></param>
        </member>
        <member name="T:Hangfire.LiteDB.PersistentJobQueueProviderCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hangfire.LiteDB.PersistentJobQueueProviderCollection.#ctor(Hangfire.LiteDB.IPersistentJobQueueProvider)">
            <summary>
            
            </summary>
            <param name="defaultProvider"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.PersistentJobQueueProviderCollection.Add(Hangfire.LiteDB.IPersistentJobQueueProvider,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            
            </summary>
            <param name="provider"></param>
            <param name="queues"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Hangfire.LiteDB.PersistentJobQueueProviderCollection.GetProvider(System.String)">
            <summary>
            
            </summary>
            <param name="queue"></param>
            <returns></returns>
        </member>
        <member name="M:Hangfire.LiteDB.PersistentJobQueueProviderCollection.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
